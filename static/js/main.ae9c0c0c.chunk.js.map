{"version":3,"sources":["logo.png","components/Images.js","components/Modal.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Images","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","images","charge","_this2","fetch","then","res","json","setState","results","_this3","componentUpdate","objectSpread","concat","_this4","img","map","item","react_default","a","createElement","className","src","urls","small","alt","key","id","onClick","modalOpen","Component","Modal","showHideClassName","show","showImg","toString","close","library","add","faStroopwafel","faCommentDots","faBell","faEllipsisH","faCopyright","faSearch","App","px","showModal","bind","assertThisInitialized","modalCloseApp","scrollTo","document","documentElement","scrollTop","window","onscroll","image","placeholder","react_fontawesome_index_es","icon","src_components_Images","components_Modal","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ae9c0c0c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.899cd5e1.png\";","import React, { Component } from 'react';\nimport \"./Images.css\"\nimport \"../Grid.css\"\n\nclass Images extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            images: [],\n            charge: false\n        }\n    }\n\n    componentDidMount() {\n        fetch(\"https://api.unsplash.com/search/photos?page=1&per_page=100&query=cats&client_id=7bcae6bf47cd6f664f54e9bff5508dfcabcb5cfe40c52b2ae6ebaa512471ad8f\")\n            .then(res => res.json())\n            .then(json => {\n                this.setState({\n                    images: json.results\n                })\n            });\n    }\n\n    componentWillUpdate() {\n        if(this.props.componentUpdate !== this.state.charge){\n            this.setState({\n                ...this.state,\n                charge: true\n            })\n            fetch(\"https://api.unsplash.com/search/photos?page=2&per_page=100&query=cats&client_id=7bcae6bf47cd6f664f54e9bff5508dfcabcb5cfe40c52b2ae6ebaa512471ad8f\")\n            .then(res => res.json())\n            .then(json => {\n                this.setState({\n                    charge: true,\n                    images: this.state.images.concat(json.results)\n                })\n            });\n        }\n    }\n\n    render() {\n        const img = this.state.images.map(item => {\n            return <img className=\"cards\" src={item.urls.small} alt=\"\" key={item.id} onClick={()=>this.props.modalOpen(item.urls.small)} />\n        })\n\n        return (\n            <div className=\"cardsDiv\">\n                {img}\n            </div>\n        )\n    }\n}\n\nexport default Images;\n","import React from 'react';\nimport \"./Modal.css\"\nimport \"../Grid.css\"\n\nfunction Modal  (props) {\n    const showHideClassName = props.show ? \"modal display-block\" : \"modal display-none\";\n\n    return (\n        <div className={showHideClassName}>\n            <section className=\"modal-main\">\n            <img className=\"imgModal\" src={props.showImg.toString()} alt=\"a\"/>\n            <button className=\"threeDots\">...</button>\n            <div className=\"buttonsModal\">\n                <button className=\"send\">Enviar</button>\n                <button className=\"save\">Guardar</button>\n            </div>\n            </section>\n            <button className=\"closeBtn\" onClick={props.close}> X </button>\n        </div>\n    )\n}\n\nexport default Modal;","import React, { Component } from 'react';\nimport Images from './components/Images.js'\nimport './App.css';\nimport './Grid.css'\nimport image from \"./logo.png\";\nimport Modal from './components/Modal.js'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStroopwafel, faCommentDots, faBell, faEllipsisH, faCopyright, faSearch } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faStroopwafel, faCommentDots, faBell, faEllipsisH, faCopyright, faSearch)\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      show: false,\n      px: false\n    }\n    this.showModal = this.showModal.bind(this);\n    this.modalCloseApp = this.modalCloseApp.bind(this);\n    this.scrollTo = this.scrollTo.bind(this);\n  }\n\n  scrollTo() {\n    if (document.documentElement.scrollTop > 640){\n      this.setState({\n        ...this.state,\n        px: true\n    }) \n    }\n  }\n\n  componentDidMount(){\n    window.onscroll = ()=>this.scrollTo()\n  }\n\n  showModal(item) {\n    this.setState({\n      show: item\n    });\n  }\n\n  modalCloseApp() {\n    this.setState({\n        show: false\n    });\n  }\n\n  render() {\n    return (\n      <div> \n      <div className=\"navDiv\"> \n        <img className=\"logo\" src={image} alt=\"a\"></img>\n        <input placeholder=\"           Buscar\"></input>\n        <button><p>Inicio</p></button>\n        <button><p className=\"icon\">Siguiendo</p></button>\n        <button><p>Catalina</p></button>\n        <button><p className=\"icon\"><FontAwesomeIcon icon=\"comment-dots\" /></p></button>\n        <button><p className=\"icon\"><FontAwesomeIcon icon=\"bell\" /></p></button>\n        <button><p className=\"icon\"><FontAwesomeIcon icon=\"ellipsis-h\" /></p></button>\n      </div>\n      <div> \n        <Images className=\"images\" modalOpen={this.showModal} componentUpdate={this.state.px} />\n        <Modal show={this.state.show} close={this.modalCloseApp} showImg={this.state.show} />\n      </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}